spring.application.name=payment-service

server.port=8081

spring.r2dbc.url=r2dbc:postgresql://localhost:5432/shop_db
spring.r2dbc.username=postgres
spring.r2dbc.password=postgres
spring.r2dbc.pool.initial-size=5
spring.r2dbc.pool.max-size=10

spring.r2dbc.initialization-mode=always
spring.sql.init.mode=always
spring.sql.init.encoding=UTF-8
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql
spring.sql.init.continue-on-error=true

spring.codec.max-in-memory-size=10MB
spring.thymeleaf.cache=false

# OpenAPI
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Настройки OAuth2 клиента
spring.security.oauth2.client.registration.auth-server.client-id=client
spring.security.oauth2.client.registration.auth-server.client-secret=secret
spring.security.oauth2.client.registration.auth-server.scope=openid,read,write
spring.security.oauth2.client.registration.auth-server.redirect-uri=http://localhost:8080/login/oauth2/code/auth-server
spring.security.oauth2.client.registration.auth-server.authorization-grant-type=authorization_code

# Настройки провайдера OAuth2
spring.security.oauth2.client.provider.auth-server.authorization-uri=http://localhost:9000/oauth2/authorize
spring.security.oauth2.client.provider.auth-server.token-uri=http://localhost:9000/oauth2/token
spring.security.oauth2.client.provider.auth-server.jwk-set-uri=http://localhost:9000/oauth2/jwks
spring.security.oauth2.client.provider.auth-server.user-info-uri=http://localhost:9000/user
spring.security.oauth2.client.provider.auth-server.user-name-attribute=username